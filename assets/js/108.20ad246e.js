(window.webpackJsonp=window.webpackJsonp||[]).push([[108],{525:function(s,a,e){"use strict";e.r(a);var t=e(12),r=Object(t.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"启动容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#启动容器"}},[s._v("#")]),s._v(" 启动容器")]),s._v(" "),a("p",[s._v("启动容器有两种方式，一种是基于镜像新建一个容器并启动，另外一个是将在终止状态（ "),a("code",[s._v("exited")]),s._v(" ）的容器重新启动。")]),s._v(" "),a("h2",{attrs:{id:"新建并启动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#新建并启动"}},[s._v("#")]),s._v(" 新建并启动")]),s._v(" "),a("p",[s._v("所需要的命令主要为 "),a("code",[s._v("docker run")]),s._v(" 。")]),s._v(" "),a("p",[s._v("例如，下面的命令输出一个 "),a("code",[s._v("Hello World")]),s._v(" ，之后终止容器。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run ubuntu:18.04 /bin/echo "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Hello world'")]),s._v("\nHello world\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("这跟在本地直接执行 "),a("code",[s._v("/bin/echo 'hello world'")]),s._v(" 几乎感觉不出任何区别。")]),s._v(" "),a("p",[s._v("下面的命令则启动一个 "),a("code",[s._v("bash")]),s._v(" 终端，允许用户进行交互。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-i")]),s._v(" ubuntu:18.04 /bin/bash\nroot@af8bae53bdd3:/"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("其中， "),a("code",[s._v("-t")]),s._v(" 选项让 "),a("code",[s._v("Docker")]),s._v(" 分配一个伪终端（ "),a("code",[s._v("pseudo-tty")]),s._v(" ）并绑定到容器的标准输入上， "),a("code",[s._v("-i")]),s._v(" 则让容器的标准输入保持打开。")]),s._v(" "),a("p",[s._v("在交互模式下，用户可以通过所创建的终端来输入命令，例如")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("root@af8bae53bdd3:/"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# pwd")]),s._v("\n/\nroot@af8bae53bdd3:/"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ls")]),s._v("\nbin boot dev etc home lib lib64 media mnt opt proc root run sbin srv sys tmp usr var\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("当利用 "),a("code",[s._v("docker run")]),s._v(" 来创建容器时，Docker 在后台运行的标准操作包括：")]),s._v(" "),a("ul",[a("li",[s._v("检查本地是否存在指定的镜像，不存在就从 "),a("code",[s._v("registry")]),s._v(" 下载")]),s._v(" "),a("li",[s._v("利用镜像创建并启动一个容器")]),s._v(" "),a("li",[s._v("分配一个文件系统，并在只读的镜像层外面挂载一层可读写层")]),s._v(" "),a("li",[s._v("从宿主主机配置的网桥接口中桥接一个虚拟接口到容器中去")]),s._v(" "),a("li",[s._v("从地址池配置一个 "),a("code",[s._v("ip")]),s._v(" 地址给容器")]),s._v(" "),a("li",[s._v("执行用户指定的应用程序")]),s._v(" "),a("li",[s._v("执行完毕后容器被终止")])]),s._v(" "),a("h2",{attrs:{id:"启动已终止容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#启动已终止容器"}},[s._v("#")]),s._v(" 启动已终止容器")]),s._v(" "),a("p",[s._v("可以利用 "),a("code",[s._v("docker container start")]),s._v(" 命令，直接将一个已经终止（ "),a("code",[s._v("exited")]),s._v(" ）的容器启动运行。")])])}),[],!1,null,null,null);a.default=r.exports}}]);