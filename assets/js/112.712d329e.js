(window.webpackJsonp=window.webpackJsonp||[]).push([[112],{530:function(t,s,a){"use strict";a.r(s);var n=a(12),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"_1-原理介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-原理介绍"}},[t._v("#")]),t._v(" 1. 原理介绍")]),t._v(" "),s("p",[s("code",[t._v("call")]),t._v(" 、"),s("code",[t._v("apply")]),t._v(" 和 "),s("code",[t._v("bind")]),t._v(" 是挂在 "),s("code",[t._v("Function")]),t._v(" 对象上的三个方法，调用这三个方法的必须是一个函数。如下：")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("thisArg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" param1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" param2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("thisArg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("param1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("param2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("thisArg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" param1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" param2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("其中 "),s("code",[t._v("func")]),t._v(" 是要调用的函数，"),s("code",[t._v("thisArg")]),t._v(" 一般为 "),s("code",[t._v("this")]),t._v(" 所指向的对象，后面的 "),s("code",[t._v("param1, param2, ...")]),t._v(" 为函数 "),s("code",[t._v("func")]),t._v(" 的多个参数，如果 "),s("code",[t._v("func")]),t._v(" 不需要参数，则后面的 "),s("code",[t._v("param1、2")]),t._v(" 可以不写。")]),t._v(" "),s("p",[t._v("这三个方法共有的、比较明显的作用就是，都可以改变函数 "),s("code",[t._v("func")]),t._v(" 的 "),s("code",[t._v("this")]),t._v(" 指向。"),s("code",[t._v("call")]),t._v(" 和 "),s("code",[t._v("apply")]),t._v(" 的区别在于，传参的写法不同："),s("code",[t._v("apply")]),t._v(" 的第 "),s("code",[t._v("2")]),t._v(" 个参数为数组； "),s("code",[t._v("call")]),t._v(" 则是从第 "),s("code",[t._v("2")]),t._v(" 个至第 "),s("code",[t._v("N")]),t._v(" 个都是给 "),s("code",[t._v("func")]),t._v(" 的传参；而 "),s("code",[t._v("bind")]),t._v(" 和这两个（"),s("code",[t._v("call")]),t._v("、"),s("code",[t._v("apply")]),t._v("）又不同，"),s("code",[t._v("bind")]),t._v(" 虽然改变了 "),s("code",[t._v("func")]),t._v(" 的 "),s("code",[t._v("this")]),t._v(" 指向，但不是马上执行，而这两个（"),s("code",[t._v("call")]),t._v("、"),s("code",[t._v("apply")]),t._v("）是在改变了函数的 "),s("code",[t._v("this")]),t._v(" 指向之后立马执行。")]),t._v(" "),s("h2",{attrs:{id:"_2-手写实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-手写实现"}},[t._v("#")]),t._v(" 2. 手写实现")]),t._v(" "),s("h3",{attrs:{id:"_2-1-call-函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-call-函数"}},[t._v("#")]),t._v(" 2.1 call 函数")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("描述")]),t._v(" "),s("p",[s("strong",[s("code",[t._v("call()")])]),t._v(" 方法使用一个指定的 "),s("code",[t._v("this")]),t._v(" 值和单独给出的一个或多个参数来调用一个函数。")])]),t._v(" "),s("li",[s("p",[t._v("语法")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("thisArg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arg1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arg2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])]),t._v(" "),s("li",[s("p",[t._v("参数")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("thisArg")]),t._v("：可选的。在 "),s("em",[t._v("fun")]),t._v(" 函数运行时指定的 "),s("code",[t._v("this")]),t._v(" 值*。*需要注意的是，指定的 "),s("code",[t._v("this")]),t._v(" 值并不一定是该函数执行时真正的 "),s("code",[t._v("this")]),t._v(" 值，如果这个函数在"),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Strict_mode",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("非严格模式")]),s("OutboundLink")],1),t._v("下运行，则指定为 "),s("code",[t._v("null")]),t._v("和 "),s("code",[t._v("undefined")]),t._v("的 "),s("code",[t._v("this")]),t._v(" 值会自动指向全局对象（浏览器中就是 window 对象），同时值为原始值（数字，字符串，布尔值）的 "),s("code",[t._v("this")]),t._v(" 会指向该原始值的自动包装对象。")]),t._v(" "),s("li",[s("strong",[t._v("arg1, arg2, ...")]),t._v(":可选的。指定的参数列表。")])])]),t._v(" "),s("li",[s("p",[t._v("返回值")]),t._v(" "),s("p",[t._v("使用调用者提供的 "),s("code",[t._v("this")]),t._v(" 值和参数调用该函数的返回值。若该方法没有返回值，则返回 "),s("code",[t._v("undefined")]),t._v("。")])]),t._v(" "),s("li",[s("p",[t._v("代码实现")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("myCall")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" context "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" globalThis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 值类型，变为对象")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" context "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"object"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" context "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fnKey "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不会出现属性名称的覆盖")]),t._v("\n  context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("fnKey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// this 就是当前的函数")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" res "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("fnKey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 绑定了 this")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("fnKey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 清理掉 fn ，防止污染")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br")])]),s("p",[t._v("实现思路：")]),t._v(" "),s("ul",[s("li",[t._v("首先，判断调用"),s("code",[t._v("mycall")]),t._v("的是不是函数，如果不是，则直接抛出异常；")]),t._v(" "),s("li",[t._v("接着，判断是否传入了第一个参数"),s("code",[t._v("context")]),t._v("，也就是要指定的"),s("code",[t._v("this")]),t._v("值，如果没有传入，则默认为"),s("code",[t._v("window")]),t._v("全局对象；")]),t._v(" "),s("li",[t._v("然后，谁将来调用"),s("code",[t._v("mycall")]),t._v("，那么"),s("code",[t._v("this")]),t._v("就是谁，将其赋给"),s("code",[t._v("context.fn")]),t._v(";")]),t._v(" "),s("li",[t._v("然后，通过参数伪数组将"),s("code",[t._v("context")]),t._v("后面的参数取出来,并传给"),s("code",[t._v("context.fn")]),t._v("获得执行结果"),s("code",[t._v("result")]),t._v("；")]),t._v(" "),s("li",[t._v("最后，删除掉"),s("code",[t._v("context.fn")]),t._v("，并将"),s("code",[t._v("result")]),t._v("返回；")])])])]),t._v(" "),s("h3",{attrs:{id:"_2-2-aplly-函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-aplly-函数"}},[t._v("#")]),t._v(" 2.2 aplly 函数")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("描述")]),t._v(" "),s("p",[s("strong",[t._v("apply()")]),t._v(" 方法调用一个具有给定"),s("code",[t._v("this")]),t._v("值的函数，以及作为一个数组（或"),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Indexed_collections##Working_with_array-like_objects",target:"_blank",rel:"noopener noreferrer"}},[t._v("类似数组对象"),s("OutboundLink")],1),t._v("）提供的参数。")])]),t._v(" "),s("li",[s("p",[t._v("语法")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("thisArg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("argsArray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])]),t._v(" "),s("li",[s("p",[t._v("参数")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("thisArg")]),t._v(":可选的。在 "),s("em",[t._v("func")]),t._v(" 函数运行时使用的 "),s("code",[t._v("this")]),t._v(" 值。请注意，"),s("code",[t._v("this")]),t._v("可能不是该方法看到的实际值：如果这个函数处于"),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Strict_mode",target:"_blank",rel:"noopener noreferrer"}},[t._v("非严格模式"),s("OutboundLink")],1),t._v("下，则指定为 "),s("code",[t._v("null")]),t._v(" 或 "),s("code",[t._v("undefined")]),t._v(" 时会自动替换为指向全局对象，原始值会被包装。")]),t._v(" "),s("li",[s("strong",[t._v("argsArray")]),t._v(":可选的。一个数组或者类数组对象，其中的数组元素将作为单独的参数传给 "),s("code",[t._v("func")]),t._v(" 函数。如果该参数的值为 "),s("code",[t._v("null")]),t._v("或 "),s("code",[t._v("undefined")]),t._v("，则表示不需要传入任何参数。从 ECMAScript 5 开始可以使用类数组对象。")])])]),t._v(" "),s("li",[s("p",[t._v("返回值")]),t._v(" "),s("p",[t._v("调用有指定 "),s("code",[t._v("this")]),t._v(" 值和参数的函数的结果。")])]),t._v(" "),s("li",[s("p",[t._v("代码实现")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("customApply")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" context "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" globalThis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 值类型，变为对象")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" context "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"object"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" context "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fnKey "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不会出现属性名称的覆盖")]),t._v("\n  context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("fnKey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// this 就是当前的函数")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" res "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("fnKey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 绑定了 this")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("fnKey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 清理掉 fn ，防止污染")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br")])]),s("p",[t._v("实现思路：")]),t._v(" "),s("ul",[s("li",[t._v("首先，判断调用"),s("code",[t._v("myapply")]),t._v("的是不是函数，如果不是，则直接抛出异常；")]),t._v(" "),s("li",[t._v("接着，判断是否传入了第一个参数"),s("code",[t._v("context")]),t._v("，也就是要指定的"),s("code",[t._v("this")]),t._v("值，如果没有传入，则默认为"),s("code",[t._v("window")]),t._v("全局对象；")]),t._v(" "),s("li",[t._v("然后，谁将来调用"),s("code",[t._v("myapply")]),t._v("，那么"),s("code",[t._v("this")]),t._v("就是谁，将其赋给"),s("code",[t._v("context.fn")]),t._v(";")]),t._v(" "),s("li",[t._v("然后，判断是否传入了第二个参数，如果传入了则将其使用展开运算符"),s("code",[t._v("...")]),t._v("传给"),s("code",[t._v("context.fn")]),t._v("获得执行结果"),s("code",[t._v("result")]),t._v("，如果没有传入，则直接调用"),s("code",[t._v("context.fn")]),t._v("获得执行结果"),s("code",[t._v("result")]),t._v("；")]),t._v(" "),s("li",[t._v("最后，删除掉"),s("code",[t._v("context.fn")]),t._v("，并将"),s("code",[t._v("result")]),t._v("返回")])])])]),t._v(" "),s("h3",{attrs:{id:"_2-3-bind-函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-bind-函数"}},[t._v("#")]),t._v(" 2.3 bind 函数")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("描述")]),t._v(" "),s("p",[t._v("**"),s("code",[t._v("bind()")]),s("strong",[t._v("方法创建一个新的函数，在")]),s("code",[t._v("bind()")]),t._v("**被调用时，这个新函数的"),s("code",[t._v("this")]),t._v("被"),s("code",[t._v("bind")]),t._v("的第一个参数指定，其余的参数将作为新函数的参数供调用时使用。")])]),t._v(" "),s("li",[s("p",[t._v("语法")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("thisArg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arg1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arg2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])]),t._v(" "),s("li",[s("p",[t._v("参数")]),t._v(" "),s("ul",[s("li",[t._v("**thisArg:**调用绑定函数时作为"),s("code",[t._v("this")]),t._v("参数传递给目标函数的值。 如果使用"),s("code",[t._v("new")]),t._v("运算符构造绑定函数，则忽略该值。当使用"),s("code",[t._v("bind")]),t._v("在"),s("code",[t._v("setTimeout")]),t._v("中创建一个函数（作为回调提供）时，作为"),s("code",[t._v("thisArg")]),t._v("传递的任何原始值都将转换为"),s("code",[t._v("object")]),t._v("。如果"),s("code",[t._v("bind")]),t._v("函数的参数列表为空，执行作用域的"),s("code",[t._v("this")]),t._v("将被视为新函数的"),s("code",[t._v("thisArg")]),t._v("。")]),t._v(" "),s("li",[t._v("**arg1, arg2, ...😗*当目标函数被调用时，预先添加到绑定函数的参数列表中的参数。")])])]),t._v(" "),s("li",[s("p",[t._v("返回值")]),t._v(" "),s("p",[t._v("返回一个原函数的拷贝，并拥有指定的 "),s("code",[t._v("this")]),t._v(" 值和初始参数。")])]),t._v(" "),s("li",[s("p",[t._v("代码实现")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("mybind")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("bindArgs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// context 是 bind 传入的 this")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bindArgs 是 bind 传入的各个参数")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" self "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当前的函数本身")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 拼接参数")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" newArgs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" bindArgs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("self")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newArgs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("p",[t._v("实现思路：")]),t._v(" "),s("ul",[s("li",[t._v("首先，判断调用"),s("code",[t._v("mybind")]),t._v("的是不是函数，如果不是，则直接抛出异常；")]),t._v(" "),s("li",[t._v("接着，谁将来调用"),s("code",[t._v("mybind")]),t._v("，那么"),s("code",[t._v("this")]),t._v("就是谁，将其赋给"),s("code",[t._v("_this")]),t._v("，缓存一下;")]),t._v(" "),s("li",[t._v("然后，通过参数伪数组将"),s("code",[t._v("context")]),t._v("后面的参数(预先添加到绑定函数的参数)取出来，记作"),s("code",[t._v("args")]),t._v(",")]),t._v(" "),s("li",[t._v("然后，返回一个函数，并判断如果使用"),s("code",[t._v("new")]),t._v("运算符构造绑定函数，则忽略传入的第一个参数"),s("code",[t._v("context")]),t._v("，并将预先添加到绑定函数的参数"),s("code",[t._v("args")]),t._v("和将来传入新函数的参数"),s("code",[t._v("arguments")]),t._v("分别通过展开运算符"),s("code",[t._v("...")]),t._v("依次传入给调用"),s("code",[t._v("mybind")]),t._v("的调用者，并将结果返回。")]),t._v(" "),s("li",[t._v("最后，如果不是使用"),s("code",[t._v("new")]),t._v("运算符构造绑定函数，则对调用者使用"),s("code",[t._v("apply")]),t._v("方法，将传入的第一个参数以及预先添加到绑定函数的参数"),s("code",[t._v("args")]),t._v("和将来传入新函数的参数"),s("code",[t._v("arguments")]),t._v("分别通过展开运算符"),s("code",[t._v("...")]),t._v("依次传入给调用"),s("code",[t._v("mybind")]),t._v("的调用者，并将结果返回；")])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);