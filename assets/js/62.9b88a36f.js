(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{305:function(s,e,t){s.exports=t.p+"assets/img/01.5bfa7fad.jpg"},477:function(s,e,t){"use strict";t.r(e);var a=t(12),n=Object(a.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"_1-前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-前言"}},[s._v("#")]),s._v(" 1.前言")]),s._v(" "),e("p",[s._v("俗话说：检验学习成果最直接的方式就是造论子。本系列文章是博主在学习了 "),e("code",[s._v("TypeScript")]),s._v(" 之后，为了检验自己的学习成果，萌生出造一个轮子试试的想法。由于是第一次造轮子，所以想选择一个常用，易于理解，并且自己较熟悉的轮子。网上搜索一番，发现前后端交互神器"),e("code",[s._v("axios")]),s._v("造的人挺多的，并且提供了很多重构思路，为了能够站在巨人的肩膀上，并且 "),e("code",[s._v("axios")]),s._v(" 也刚好符合上面提到的三个要求，那就是它啦，使用"),e("code",[s._v("TypeScript")]),s._v("重构"),e("code",[s._v("axios")]),s._v("。")]),s._v(" "),e("h1",{attrs:{id:"_2-需求分析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-需求分析"}},[s._v("#")]),s._v(" 2.需求分析")]),s._v(" "),e("blockquote",[e("p",[s._v("axios,基于 Promise 的 HTTP 客户端，用于浏览器和 node.js")])]),s._v(" "),e("p",[s._v("重构之前，我们需要简单地做一些需求分析，看一下我们这次重构需要支持哪些 "),e("code",[s._v("Features")]),s._v("。官方支持的"),e("code",[s._v("Features")]),s._v("如下：")]),s._v(" "),e("ul",[e("li",[s._v("Make "),e("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest",target:"_blank",rel:"noopener noreferrer"}},[s._v("XMLHttpRequests"),e("OutboundLink")],1),s._v(" from the browser（在浏览器端使用 XMLHttpRequest 对象通讯）")]),s._v(" "),e("li",[e("s",[s._v("Make "),e("a",{attrs:{href:"http://nodejs.org/api/http.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("http"),e("OutboundLink")],1),s._v(" requests from node.js（在 Node.js 端使用 http request 通讯）")])]),s._v(" "),e("li",[s._v("Supports the "),e("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",target:"_blank",rel:"noopener noreferrer"}},[s._v("Promise"),e("OutboundLink")],1),s._v(" API（支持 Promise API）")]),s._v(" "),e("li",[s._v("Intercept request and response（支持请求和响应的拦截器）")]),s._v(" "),e("li",[s._v("Transform request and response data（支持请求数据和响应数据的转换）")]),s._v(" "),e("li",[s._v("Cancel requests（支持请求的取消）")]),s._v(" "),e("li",[s._v("Automatic transforms for JSON data（JSON 数据的自动转换）")]),s._v(" "),e("li",[s._v("Client side support for protecting against "),e("a",{attrs:{href:"http://en.wikipedia.org/wiki/Cross-site_request_forgery",target:"_blank",rel:"noopener noreferrer"}},[s._v("XSRF"),e("OutboundLink")],1),s._v("（客户端防止 XSRF）")])]),s._v(" "),e("p",[s._v("这次重构，我们只实现官方支持的 8 个"),e("code",[s._v("Features")]),s._v("中的 7 个，其中"),e("code",[s._v("axios")]),s._v("在"),e("code",[s._v("node")]),s._v("中的应用不打算实现，因为这部分在日常使用中相对较少（其实是因为懒，逃~）。")]),s._v(" "),e("h1",{attrs:{id:"_3-了解-axios"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-了解-axios"}},[s._v("#")]),s._v(" 3.了解 axios")]),s._v(" "),e("p",[e("code",[s._v("axios")]),s._v(" 本质上就是发送一个请求拿到响应结果中途可以去对配置参数、请求数据和响应数据处理同时也支持一些拦截器的调用，它的工作流程如下：")]),s._v(" "),e("p",[e("img",{attrs:{src:t(305),alt:""}})]),s._v(" "),e("p",[s._v("而我们后续的重构思路也是严格按照这样一个工作流程展开。")]),s._v(" "),e("h1",{attrs:{id:"_3-目录介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-目录介绍"}},[s._v("#")]),s._v(" 3.目录介绍")]),s._v(" "),e("p",[s._v("本项目分为客户端（"),e("code",[s._v("examples")]),s._v("文件夹）和服务端（"),e("code",[s._v("server")]),s._v("文件夹）：客户端主要是用来检验重构功能的"),e("code",[s._v("demo")]),s._v("，采用"),e("code",[s._v("TypeScript")]),s._v("按照模块化进行编写；服务端是用来响应"),e("code",[s._v("demo")]),s._v("中发出的请求，采用"),e("code",[s._v("express")]),s._v("编写。")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("├─.gitignore\n├─index.html\n├─package.json\n├─README.md\n├─tsconfig.json       "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# TypeScript 编译配置文件")]),s._v("\n├─tslint.json         "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# TypeScript lint 文件")]),s._v("\n├─examples            "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 每个功能点的demo")]),s._v("\n├─server              "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 服务端源码")]),s._v("\n└─src                 "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 源码目录")]),s._v("\n    ├─axios.ts\n    ├─defaultes.ts\n    ├─cancel\n    ├─core\n    ├─helpers\n    └─types\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("h1",{attrs:{id:"_4-项目运行"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-项目运行"}},[s._v("#")]),s._v(" 4.项目运行")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 克隆项目到本地")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone https://github.com/NLRX-WJC/ts-axios.git\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 进入项目目录")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" ts-axios\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装依赖")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 同时打开客户端和服务端")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run server "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" start\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[s._v("OK，介绍完了，现在就让我们开始使用"),e("code",[s._v("TypeScript")]),s._v("重构"),e("code",[s._v("axios")]),s._v("吧！！！")])])}),[],!1,null,null,null);e.default=n.exports}}]);